import type { Abi } from 'viem';

// This ABI is now corrected and includes the redeemPoints function
export const chaosCoinAbi = [ { "type": "constructor", "inputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "COIN_PRICE", "inputs": [], "outputs": [ { "name": "", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "view" }, { "type": "function", "name": "authorizeGame", "inputs": [ { "name": "gameContract", "type": "address", "internalType": "address" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "awardPoints", "inputs": [ { "name": "user", "type": "address", "internalType": "address" }, { "name": "amount", "type": "uint256", "internalType": "uint256" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "authorizedGames", "inputs": [ { "name": "", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "", "type": "bool", "internalType": "bool" } ], "stateMutability": "view" }, { "type": "function", "name": "buyCoins", "inputs": [ { "name": "amount", "type": "uint256", "internalType": "uint256" } ], "outputs": [], "stateMutability": "payable" }, { "type": "function", "name": "getCoins", "inputs": [ { "name": "user", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "view" }, { "type": "function", "name": "owner", "inputs": [], "outputs": [ { "name": "", "type": "address", "internalType": "address" } ], "stateMutability": "view" }, { "type": "function", "name": "points", "inputs": [ { "name": "", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "view" }, { "type": "function", "name": "redeemPoints", "inputs": [ { "name": "amount", "type": "uint256", "internalType": "uint256" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "renounceOwnership", "inputs": [], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "revokeGame", "inputs": [ { "name": "gameContract", "type": "address", "internalType": "address" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "spendCoins", "inputs": [ { "name": "user", "type": "address", "internalType": "address" }, { "name": "amount", "type": "uint256", "internalType": "uint256" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "transferOwnership", "inputs": [ { "name": "newOwner", "type": "address", "internalType": "address" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "withdraw", "inputs": [], "outputs": [], "stateMutability": "nonpayable" }, { "type": "event", "name": "CoinsPurchased", "inputs": [ { "name": "player", "type": "address", "internalType": "address", "indexed": true }, { "name": "amount", "type": "uint256", "internalType": "uint256", "indexed": false }, { "name": "paidWei", "type": "uint256", "internalType": "uint256", "indexed": false } ], "anonymous": false }, { "type": "event", "name": "GameAuthorized", "inputs": [ { "name": "gameContract", "type": "address", "internalType": "address", "indexed": true } ], "anonymous": false }, { "type": "event", "name": "GameRevoked", "inputs": [ { "name": "gameContract", "type": "address", "internalType": "address", "indexed": true } ], "anonymous": false }, { "type": "event", "name": "OwnershipTransferred", "inputs": [ { "name": "previousOwner", "type": "address", "internalType": "address", "indexed": true }, { "name": "newOwner", "type": "address", "internalType": "address", "indexed": true } ], "anonymous": false }, { "type": "event", "name": "PointsRedeemed", "inputs": [ { "name": "player", "type": "address", "internalType": "address", "indexed": true }, { "name": "amount", "type": "uint256", "internalType": "uint256", "indexed": false } ], "anonymous": false } ] as const satisfies Abi;

// This is the one with the typo fixed.
export const coinFlipAbi = [ { "type": "constructor", "inputs": [ { "name": "chaosCoinAddress", "type": "address", "internalType": "address" } ], "stateMutability": "nonpayable" }, { "type": "function", "name": "POINTS_PER_WIN", "inputs": [], "outputs": [ { "name": "", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "view" }, { "type": "function", "name": "activeBet", "inputs": [ { "name": "", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "", "type": "uint8", "internalType": "uint8" } ], "stateMutability": "view" }, { "type": "function", "name": "claimPoints", "inputs": [], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "flip", "inputs": [], "outputs": [ { "name": "win", "type": "bool", "internalType": "bool" }, { "name": "resultHeads", "type": "bool", "internalType": "bool" } ], "stateMutability": "nonpayable" }, { "type": "function", "name": "hasActiveBet", "inputs": [ { "name": "user", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "", "type": "bool", "internalType": "bool" } ], "stateMutability": "view" }, { "type": "function", "name": "i_chaosCoin", "inputs": [], "outputs": [ { "name": "", "type": "address", "internalType": "contract IChaosCoin" } ], "stateMutability": "view" }, { "type": "function", "name": "owner", "inputs": [], "outputs": [ { "name": "", "type": "address", "internalType": "address" } ], "stateMutability": "view" }, { "type": "function", "name": "pendingPoints", "inputs": [ { "name": "", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "view" }, { "type": "function", "name": "placeBet", "inputs": [ { "name": "guessHeads", "type": "bool", "internalType": "bool" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "renounceOwnership", "inputs": [], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "transferOwnership", "inputs": [ { "name": "newOwner", "type": "address", "internalType": "address" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "event", "name": "BetPlaced", "inputs": [ { "name": "player", "type": "address", "internalType": "address", "indexed": true }, { "name": "guessHeads", "type": "bool", "internalType": "bool", "indexed": false } ], "anonymous": false }, { "type": "event", "name": "CoinFlipped", "inputs": [ { "name": "player", "type": "address", "internalType": "address", "indexed": true }, { "name": "win", "type": "bool", "internalType": "bool", "indexed": false }, { "name": "resultHeads", "type": "bool", "internalType": "bool", "indexed": false }, { "name": "pendingPoints", "type": "uint256", "internalType": "uint256", "indexed": false } ], "anonymous": false }, { "type": "event", "name": "OwnershipTransferred", "inputs": [ { "name": "previousOwner", "type": "address", "internalType": "address", "indexed": true }, { "name": "newOwner", "type": "address", "internalType": "address", "indexed": true } ], "anonymous": false }, { "type": "event", "name": "PointsClaimed", "inputs": [ { "name": "player", "type": "address", "internalType": "address", "indexed": true }, { "name": "amount", "type": "uint256", "internalType": "uint256", "indexed": false } ], "anonymous": false } ] as const satisfies Abi;

export const quantumRiftAbi = [ { type: 'constructor', inputs: [{ name: 'chaosCoinAddress', type: 'address', internalType: 'address' }], stateMutability: 'nonpayable' }, { type: 'function', name: 'MAX_BET_AMOUNT', inputs: [], outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }], stateMutability: 'view' }, { type: 'function', name: 'MULTIPLIERS', inputs: [{ name: '', type: 'uint256', internalType: 'uint256' }], outputs: [{ name: '', type: 'uint16', internalType: 'uint16' }], stateMutability: 'view' }, { type: 'function', name: 'PARADOX_BLOOM', inputs: [], outputs: [{ name: '', type: 'uint8', internalType: 'uint8' }], stateMutability: 'view' }, { type: 'function', name: 'PROBABILITIES', inputs: [{ name: '', type: 'uint256', internalType: 'uint256' }], outputs: [{ name: '', type: 'uint16', internalType: 'uint16' }], stateMutability: 'view' }, { type: 'function', name: 'STABLE_DECAY', inputs: [], outputs: [{ name: '', type: 'uint8', internalType: 'uint8' }], stateMutability: 'view' }, { type: 'function', name: 'VOID_ECHO', inputs: [], outputs: [{ name: '', type: 'uint8', internalType: 'uint8' }], stateMutability: 'view' }, { type: 'function', name: 'CHRONO_SURGE', inputs: [], outputs: [{ name: '', type: 'uint8', internalType: 'uint8' }], stateMutability: 'view' }, { type: 'function', name: 'i_chaosCoin', inputs: [], outputs: [{ name: '', type: 'address', internalType: 'contract IChaosCoin' }], stateMutability: 'view' }, { type: 'function', name: 'nextBetId', inputs: [], outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }], stateMutability: 'view' }, { type: 'function', name: 'owner', inputs: [], outputs: [{ name: '', type: 'address', internalType: 'address' }], stateMutability: 'view' }, { type: 'function', name: 'placeBet', inputs: [{ name: 'choice', type: 'uint8', internalType: 'uint8' }, { name: 'amount', type: 'uint256', internalType: 'uint256' }], outputs: [{ name: 'betId', type: 'uint256', internalType: 'uint256' }], stateMutability: 'nonpayable' }, { type: 'function', name: 'renounceOwnership', inputs: [], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'resolveBet', inputs: [{ name: 'betId', type: 'uint256', internalType: 'uint256' }], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 's_bets', inputs: [{ name: '', type: 'uint256', internalType: 'uint256' }], outputs: [{ name: 'player', type: 'address', internalType: 'address' }, { name: 'amount', type: 'uint256', internalType: 'uint256' }, { name: 'choice', type: 'uint8', internalType: 'uint8' }, { name: 'isResolved', type: 'bool', internalType: 'bool' }], stateMutability: 'view' }, { type: 'function', name: 'transferOwnership', inputs: [{ name: 'newOwner', type: 'address', internalType: 'address' }], outputs: [], stateMutability: 'nonpayable' }, { type: 'event', name: 'BetPlaced', inputs: [{ name: 'betId', type: 'uint256', internalType: 'uint256', indexed: true }, { name: 'player', type: 'address', internalType: 'address', indexed: true }, { name: 'amount', type: 'uint256', internalType: 'uint256', indexed: false }, { name: 'choice', type: 'uint8', internalType: 'uint8', indexed: false }], anonymous: false }, { type: 'event', name: 'BetSettled', inputs: [{ name: 'betId', type: 'uint256', internalType: 'uint256', indexed: true }, { name: 'player', type: 'address', internalType: 'address', indexed: true }, { name: 'choice', type: 'uint8', internalType: 'uint8', indexed: false }, { name: 'outcome', type: 'uint8', internalType: 'uint8', indexed: false }, { name: 'payout', type: 'uint256', internalType: 'uint256', indexed: false }], anonymous: false }, { type: 'event', name: 'OwnershipTransferred', inputs: [{ name: 'previousOwner', type: 'address', internalType: 'address', indexed: true }, { name: 'newOwner', type: 'address', internalType: 'address', indexed: true }], anonymous: false }, ] as const satisfies Abi;
export const aethericAnvilAbi = [ { type: 'constructor', inputs: [{ name: 'chaosCoinAddress', type: 'address', internalType: 'address' }, { name: 'chaosRunesAddress', type: 'address', internalType: 'address' }], stateMutability: 'nonpayable' }, { type: 'function', name: 'STRIKE_COST', inputs: [], outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }], stateMutability: 'view' }, { type: 'function', name: 'i_chaosCoin', inputs: [], outputs: [{ name: '', type: 'address', internalType: 'contract IChaosCoin' }], stateMutability: 'view' }, { type: 'function', name: 'i_chaosRunes', inputs: [], outputs: [{ name: '', type: 'address', internalType: 'contract ChaosRunes' }], stateMutability: 'view' }, { type: 'function', name: 'nextStrikeId', inputs: [], outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }], stateMutability: 'view' }, { type: 'function', name: 'owner', inputs: [], outputs: [{ name: '', type: 'address', internalType: 'address' }], stateMutability: 'view' }, { type: 'function', name: 'renounceOwnership', inputs: [], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'resolveForge', inputs: [{ name: 'strikeId', type: 'uint256', internalType: 'uint256' }], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 's_strikeRequests', inputs: [{ name: '', type: 'uint256', internalType: 'uint256' }], outputs: [{ name: '', type: 'address', internalType: 'address' }], stateMutability: 'view' }, { type: 'function', name: 'strikeAnvil', inputs: [], outputs: [{ name: 'strikeId', type: 'uint256', internalType: 'uint256' }], stateMutability: 'nonpayable' }, { type: 'function', name: 'transferOwnership', inputs: [{ name: 'newOwner', type: 'address', internalType: 'address' }], outputs: [], stateMutability: 'nonpayable' }, { type: 'event', name: 'AnvilStruck', inputs: [{ name: 'strikeId', type: 'uint256', internalType: 'uint256', indexed: true }, { name: 'player', type: 'address', internalType: 'address', indexed: true }], anonymous: false }, { type: 'event', name: 'ForgeSettled', inputs: [{ name: 'strikeId', type: 'uint256', internalType: 'uint256', indexed: true }, { name: 'player', type: 'address', internalType: 'address', indexed: true }, { name: 'outcome', type: 'string', internalType: 'string', indexed: false }, { name: 'pointsWon', type: 'uint256', internalType: 'uint256', indexed: false }, { name: 'tokenId', type: 'uint256', internalType: 'uint256', indexed: false }], anonymous: false }, { type: 'event', name: 'OwnershipTransferred', inputs: [{ name: 'previousOwner', type: 'address', internalType: 'address', indexed: true }, { name: 'newOwner', type: 'address', internalType: 'address', indexed: true }], anonymous: false }, ] as const satisfies Abi;
export const chaosAltarAbi = [ { type: 'constructor', inputs: [{ name: 'chaosCoinAddress', type: 'address', internalType: 'address' }], stateMutability: 'nonpayable' }, { type: 'function', name: 'ESSENCE_CONTRIBUTION_PERCENT', inputs: [], outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }], stateMutability: 'view' }, { type: 'function', name: 'MIN_CHANNEL_AMOUNT', inputs: [], outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }], stateMutability: 'view' }, { type: 'function', name: 'altarEssence', inputs: [], outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }], stateMutability: 'view' }, { type: 'function', name: 'channel', inputs: [{ name: 'amount', type: 'uint256', internalType: 'uint256' }], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'currentHarbinger', inputs: [], outputs: [{ name: '', type: 'address', internalType: 'address' }], stateMutability: 'view' }, { type: 'function', name: 'dominance', inputs: [{ name: '', type: 'address', internalType: 'address' }], outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }], stateMutability: 'view' }, { type: 'function', name: 'endRound', inputs: [], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'getTimeLeft', inputs: [], outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }], stateMutability: 'view' }, { type: 'function', name: 'i_chaosCoin', inputs: [], outputs: [{ name: '', type: 'address', internalType: 'contract IChaosCoin' }], stateMutability: 'view' }, { type: 'function', name: 'owner', inputs: [], outputs: [{ name: '', type: 'address', internalType: 'address' }], stateMutability: 'view' }, { type: 'function', name: 'renounceOwnership', inputs: [], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'roundDuration', inputs: [], outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }], stateMutability: 'view' }, { type: 'function', name: 'roundEndTime', inputs: [], outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }], stateMutability: 'view' }, { type: 'function', name: 'roundId', inputs: [], outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }], stateMutability: 'view' }, { type: 'function', name: 'transferOwnership', inputs: [{ name: 'newOwner', type: 'address', internalType: 'address' }], outputs: [], stateMutability: 'nonpayable' }, { type: 'event', name: 'Channeled', inputs: [{ name: 'player', type: 'address', internalType: 'address', indexed: true }, { name: 'amount', type: 'uint256', internalType: 'uint256', indexed: false }], anonymous: false }, { type: 'event', name: 'ChaoticEvent', inputs: [{ name: 'player', type: 'address', internalType: 'address', indexed: true }, { name: 'eventType', type: 'string', internalType: 'string', indexed: false }, { name: 'pointsWon', type: 'uint256', internalType: 'uint256', indexed: false }], anonymous: false }, { type: 'event', name: 'NewHarbinger', inputs: [{ name: 'newHarbinger', type: 'address', internalType: 'address', indexed: true }, { name: 'newDominance', type: 'uint256', internalType: 'uint256', indexed: false }], anonymous: false }, { type: 'event', name: 'OwnershipTransferred', inputs: [{ name: 'previousOwner', type: 'address', internalType: 'address', indexed: true }, { name: 'newOwner', type: 'address', internalType: 'address', indexed: true }], anonymous: false }, { type: 'event', name: 'RoundStarted', inputs: [{ name: 'roundId', type: 'uint256', internalType: 'uint256', indexed: true }, { name: 'endTime', type: 'uint256', internalType: 'uint256', indexed: false }], anonymous: false }, { type: 'event', name: 'RoundSettled', inputs: [{ name: 'roundId', type: 'uint256', internalType: 'uint256', indexed: true }, { name: 'winner', type: 'address', internalType: 'address', indexed: true }, { name: 'jackpot', type: 'uint256', internalType: 'uint256', indexed: false }], anonymous: false }, ] as const satisfies Abi;

// --- THIS IS THE NEW PART ---
export const chaosRunesAbi = [ { type: 'constructor', inputs: [{ name: 'name', type: 'string', internalType: 'string' }, { name: 'symbol', type: 'string', internalType: 'string' }, { name: 'baseTokenURI', type: 'string', internalType: 'string' }], stateMutability: 'nonpayable' }, { type: 'function', name: 'approve', inputs: [{ name: 'to', type: 'address', internalType: 'address' }, { name: 'tokenId', type: 'uint256', internalType: 'uint256' }], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'balanceOf', inputs: [{ name: 'owner', type: 'address', internalType: 'address' }], outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }], stateMutability: 'view' }, { type: 'function', name: 'getApproved', inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }], outputs: [{ name: '', type: 'address', internalType: 'address' }], stateMutability: 'view' }, { type: 'function', name: 'isApprovedForAll', inputs: [{ name: 'owner', type: 'address', internalType: 'address' }, { name: 'operator', type: 'address', internalType: 'address' }], outputs: [{ name: '', type: 'bool', internalType: 'bool' }], stateMutability: 'view' }, { type: 'function', name: 'name', inputs: [], outputs: [{ name: '', type: 'string', internalType: 'string' }], stateMutability: 'view' }, { type: 'function', name: 'owner', inputs: [], outputs: [{ name: '', type: 'address', internalType: 'address' }], stateMutability: 'view' }, { type: 'function', name: 'ownerOf', inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }], outputs: [{ name: '', type: 'address', internalType: 'address' }], stateMutability: 'view' }, { type: 'function', name: 'renounceOwnership', inputs: [], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'runeNames', inputs: [{ name: '', type: 'uint256', internalType: 'uint256' }], outputs: [{ name: '', type: 'string', internalType: 'string' }], stateMutability: 'view' }, { type: 'function', name: 'safeMint', inputs: [{ name: 'to', type: 'address', internalType: 'address' }, { name: 'runeType', type: 'uint8', internalType: 'uint8' }], outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }], stateMutability: 'nonpayable' }, { type: 'function', name: 'safeTransferFrom', inputs: [{ name: 'from', type: 'address', internalType: 'address' }, { name: 'to', type: 'address', internalType: 'address' }, { name: 'tokenId', type: 'uint256', internalType: 'uint256' }], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'safeTransferFrom', inputs: [{ name: 'from', type: 'address', internalType: 'address' }, { name: 'to', type: 'address', internalType: 'address' }, { name: 'tokenId', type: 'uint256', internalType: 'uint256' }, { name: 'data', type: 'bytes', internalType: 'bytes' }], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'setApprovalForAll', inputs: [{ name: 'operator', type: 'address', internalType: 'address' }, { name: 'approved', type: 'bool', internalType: 'bool' }], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'supportsInterface', inputs: [{ name: 'interfaceId', type: 'bytes4', internalType: 'bytes4' }], outputs: [{ name: '', type: 'bool', internalType: 'bool' }], stateMutability: 'view' }, { type: 'function', name: 'symbol', inputs: [], outputs: [{ name: '', type: 'string', internalType: 'string' }], stateMutability: 'view' }, { type: 'function', name: 'tokenByIndex', inputs: [{ name: 'index', type: 'uint256', internalType: 'uint256' }], outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }], stateMutability: 'view' }, { type: 'function', name: 'tokenOfOwnerByIndex', inputs: [{ name: 'owner', type: 'address', internalType: 'address' }, { name: 'index', type: 'uint256', internalType: 'uint256' }], outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }], stateMutability: 'view' }, { type: 'function', name: 'tokenURI', inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }], outputs: [{ name: '', type: 'string', internalType: 'string' }], stateMutability: 'view' }, { type: 'function', name: 'totalSupply', inputs: [], outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }], stateMutability: 'view' }, { type: 'function', name: 'transferFrom', inputs: [{ name: 'from', type: 'address', internalType: 'address' }, { name: 'to', type: 'address', internalType: 'address' }, { name: 'tokenId', type: 'uint256', internalType: 'uint256' }], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'transferOwnership', inputs: [{ name: 'newOwner', type: 'address', internalType: 'address' }], outputs: [], stateMutability: 'nonpayable' }, { type: 'event', name: 'Approval', inputs: [{ name: 'owner', type: 'address', internalType: 'address', indexed: true }, { name: 'approved', type: 'address', internalType: 'address', indexed: true }, { name: 'tokenId', type: 'uint256', internalType: 'uint256', indexed: true }], anonymous: false }, { type: 'event', name: 'ApprovalForAll', inputs: [{ name: 'owner', type: 'address', internalType: 'address', indexed: true }, { name: 'operator', type: 'address', internalType: 'address', indexed: true }, { name: 'approved', type: 'bool', internalType: 'bool', indexed: false }], anonymous: false }, { type: 'event', name: 'OwnershipTransferred', inputs: [{ name: 'previousOwner', type: 'address', internalType: 'address', indexed: true }, { name: 'newOwner', type: 'address', internalType: 'address', indexed: true }], anonymous: false }, { type: 'event', name: 'Transfer', inputs: [{ name: 'from', type: 'address', internalType: 'address', indexed: true }, { name: 'to', type: 'address', internalType: 'address', indexed: true }, { name: 'tokenId', type: 'uint256', internalType: 'uint256', indexed: true }], anonymous: false }, ] as const satisfies Abi;
// --- THIS IS THE NEW ABI FOR THE PEGS GAME ---
export const chaosPegsAbi = [{"type":"constructor","inputs":[{"name":"chaosCoinAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"CHAOS_RISK_MULTIPLIERS","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint16","internalType":"uint16"}],"stateMutability":"view"},{"type":"function","name":"LOW_RISK_MULTIPLIERS","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint16","internalType":"uint16"}],"stateMutability":"view"},{"type":"function","name":"MEDIUM_RISK_MULTIPLIERS","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint16","internalType":"uint16"}],"stateMutability":"view"},{"type":"function","name":"dropBall","inputs":[{"name":"betAmount","type":"uint256","internalType":"uint256"},{"name":"riskLevel","type":"uint8","internalType":"uint8"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"i_chaosCoin","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IChaosCoin"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"BallDropped","inputs":[{"name":"player","type":"address","indexed":true,"internalType":"address"},{"name":"betAmount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"riskLevel","type":"uint8","indexed":false,"internalType":"uint8"},{"name":"outcomeBin","type":"uint8","indexed":false,"internalType":"uint8"},{"name":"pointsWon","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"OwnableInvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"OwnableUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"}]}] as const satisfies Abi;


